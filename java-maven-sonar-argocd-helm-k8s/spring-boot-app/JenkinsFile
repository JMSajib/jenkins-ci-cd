pipeline {
  agent any

  stages {
    // stage('Clean Workspace') {
    //   steps {
    //     deleteDir()
    //   }
    // }

    stage('Checkout') {
      steps {
        sh 'echo passed'
        // Uncomment the below line to use your actual Git repo
        // git branch: 'main', url: 'https://github.com/your_git'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          set -e
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package -Dmaven.clean.failOnError=false
        '''
      }
    }

    // Uncomment and configure SonarQube when ready
    // stage('Static Code Analysis') {
    //   environment {
    //     SONAR_URL = credentials('SONARQUBE_IP_ADDRESS')
    //   }
    //   steps {
    //     echo "Sonar IP Address --> $SONAR_URL"
    //     withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
    //       sh '''
    //         cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
    //         mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
    //       '''
    //     }
    //   }
    // }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "jmsajib11/full-ci-cd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh '''
              set -e
              cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
              docker build -t ${DOCKER_IMAGE} .
            '''
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "jenkins-ci-cd"
        GIT_USER_NAME = "JMSajib"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          echo " ******** GITHUB --> $GITHUB_TOKEN **********"
          sh '''
            set -e
            git config user.email "jm.sajib012@gmail.com"
            git config user.name "Jahidul Momin"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
